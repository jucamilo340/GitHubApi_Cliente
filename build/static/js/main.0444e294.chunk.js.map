{"version":3,"sources":["constants/index.js","config/axios.js","components/Login/Login.js","components/Login/SingUp.js","components/Layouts/Header.js","components/Layouts/Search.js","components/Inicio.js","Main.js","config/apollo.js","App.js","reportWebVitals.js","index.js"],"names":["URL_BASE","process","console","log","Axios","axios","create","baseURL","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","color","Login","classes","user","localStorage","getItem","history","useHistory","formik","useFormik","initialValues","username","password","validationSchema","Yup","min","required","onSubmit","values","data","post","then","res","Swal","fire","setItem","JSON","stringify","push","catch","err","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","noValidate","handleSubmit","TextField","fullWidth","id","label","name","autoComplete","onChange","handleChange","value","helperText","touched","errors","error","Button","to","Box","mt","firstName","lastName","email","autoFocus","justify","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","nav","Header","avatarurl","User","parse","AppBar","position","Toolbar","noWrap","alt","src","href","onClick","removeItem","input","marginLeft","flex","iconButton","Search","repositoriesAll","setrepositories","InputBase","placeholder","inputProps","e","term","target","SearchRepositories","Array","from","filter","repo","toUpperCase","indexOf","SearchRepository","IconButton","aria-label","query","gql","minWidth","bullet","transform","title","fontSize","pos","marginBottom","Star","cursor","Inicio","useState","repositories","repositoriesFav","setrepositoriesFav","setavatarurl","active","setactive","Fav","setFav","favvoid","setfavvoid","refresh","setrefresh","disable","setdisable","useQuery","variables","login","loading","refetch","getFavorites","userId","_id","length","repos","useEffect","nodes","avatarUrl","Container","style","size","CircularProgress","map","index","Card","CardContent","content","gutterBottom","isPrivate","moment","Date","createdAt","format","with","description","url","CardActions","find","delete","params","RemoveFavorites","AddFavorites","Main","exact","path","SingUp","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","authorization","client","ApolloClient","concat","cache","InMemoryCache","App","ApolloProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0444e294.chunk.js","sourcesContent":["export const URL_BASE = process.env.REACT_APP_BASE_URL;\r\nexport const CREATE_USER = '/api/users/create';\r\nexport const LOGIN_USER = '/api/users/Login';\r\nexport const ADD_FAVORITES = '/api/repositories/Add';\r\nexport const GET_FAVORITES = '/api/repositories/';\r\nexport const REMOVE_FAVORITES = '/api/repositories/delete';\r\n","import axios from \"axios\";\r\nimport { URL_BASE } from \"../constants\";\r\n\r\n\r\nconsole.log(\"URL_BASE\",URL_BASE);\r\nexport const Axios = axios.create({\r\n  baseURL: URL_BASE\r\n});","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useFormik } from \"formik\";\r\nimport { Axios } from \"../../config/axios\"\r\nimport Swal from 'sweetalert2'\r\nimport {useHistory } from \"react-router-dom\";\r\nimport * as Yup from 'yup';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  LOGIN_USER,\r\n} from \"../../constants/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://blog.underc0de.org/wp-content/uploads/2020/10/69061801_1983324578436489_6865726632515076096_o.jpg)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n      backgroundColor:\"#202123\",\r\n      color:\"white\"\r\n    },\r\n  }));\r\n  \r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    var user = localStorage.getItem('user');\r\n    let history = useHistory();\r\n\r\n    // use formik to validate the form data\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        username:\"\",\r\n        password:\"\"     \r\n      },\r\n      //validate the fields\r\n      validationSchema: Yup.object({      \r\n        password:Yup.string().min(6, 'The password must be a minimum of 6 characters').required('The Password is required'),\r\n        username: Yup.string().required(\"The username is required\"),       \r\n      }),\r\n      onSubmit: (values) => {\r\n        const data = {\r\n          username:values.username,\r\n          password: values.password,\r\n        };         \r\n        //Request Login user  \r\n        Axios.post(LOGIN_USER, data)\r\n        .then((res) => {\r\n          Swal.fire(\r\n            'User Login Successfully',\r\n            '',\r\n            'success'\r\n          )\r\n          localStorage.setItem('user',JSON.stringify(res.data));\r\n          //  redirect to the home page\r\n          history.push('/')\r\n          \r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire(\r\n            'There was an Error Login the user',\r\n            '',\r\n            'error'\r\n          )\r\n        });\r\n        \r\n      },\r\n    });\r\n\r\n    return (<>\r\n        {user===null?\r\n        <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Login\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.username}\r\n                helperText={formik.touched.username && formik.errors.username}\r\n                error={formik.touched.username && formik.errors.username ? true : false}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.password}\r\n                helperText={formik.touched.password && formik.errors.password}\r\n                error={formik.touched.password && formik.errors.password ? true : false}\r\n              />              \r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                className={classes.submit}\r\n              >\r\n                Login\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>                 \r\n                </Grid>\r\n                <Grid item>\r\n                  <Link to=\"/singUp\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={5}>\r\n                {/* <Copyright /> */}\r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      :<Redirect to=\"/\" />\r\n      }\r\n      </>\r\n    );\r\n}\r\n \r\nexport default Login;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useFormik } from \"formik\";\r\nimport Swal from 'sweetalert2'\r\nimport { Axios } from \"../../config/axios\"\r\nimport {useHistory } from \"react-router-dom\";\r\nimport {\r\n  CREATE_USER,\r\n} from \"../../constants/index\";\r\nimport * as Yup from 'yup';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport 'date-fns';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: '100vh',\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://blog.underc0de.org/wp-content/uploads/2020/10/69061801_1983324578436489_6865726632515076096_o.jpg)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n      backgroundSize: 'cover',\r\n      backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n      backgroundColor:\"#202123\",\r\n      color:\"white\"\r\n    },\r\n  }));\r\n  \r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n      // use formik to validate the form data\r\n      const formik = useFormik({\r\n        initialValues: {\r\n          firstName: \"\",\r\n          lastName:\"\",\r\n          username:\"\",\r\n          email:\"\",\r\n          password:\"\"          \r\n        },\r\n        //validate the fields\r\n        validationSchema: Yup.object({\r\n          firstName: Yup.string().required(\"The firstName is required\"),\r\n          lastName: Yup.string().required(\"The lastName is required\"),\r\n          username: Yup.string().required(\"The username is required\"),\r\n          password:Yup.string().min(6, 'The password must be a minimum of 6 characters').required('The Password is required'),\r\n          email: Yup.string().email('Invalid email').required('The Email is required'),\r\n         \r\n        }),\r\n        onSubmit: (values) => {\r\n          const data = {\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            username: values.username,\r\n            email: values.email,\r\n            password: values.password,\r\n          }; \r\n        //Request Create user  \r\n        Axios.post(CREATE_USER, data)\r\n        .then((res) => {\r\n          Swal.fire(\r\n            'User Created Successfully',\r\n            '',\r\n            'success'\r\n          )\r\n          history.push('/Login')\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          Swal.fire(\r\n            'There was an Error creating the user',\r\n            '',\r\n            'error'\r\n          )\r\n        });\r\n          \r\n        },\r\n      });\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign Up\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.firstName}\r\n                helperText={formik.touched.firstName && formik.errors.firstName}\r\n                error={formik.touched.firstName && formik.errors.firstName ? true : false}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.lastName}\r\n                helperText={formik.touched.lastName && formik.errors.lastName}\r\n                error={formik.touched.lastName && formik.errors.lastName ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.username}\r\n                helperText={formik.touched.username && formik.errors.username}\r\n                error={formik.touched.username && formik.errors.username ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n                error={formik.touched.email && formik.errors.email ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.password}\r\n                helperText={formik.touched.password && formik.errors.password}\r\n                error={formik.touched.password && formik.errors.password ? true : false}\r\n              />\r\n              \r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n            \r\n            </Grid>\r\n                    \r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"#434b4d\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/Login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n}\r\n \r\nexport default Login;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    '@global': {\r\n      ul: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyle: 'none',\r\n      },\r\n    },\r\n    appBar: {\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      backgroundColor:\"#202123\",\r\n      color:\"white\"\r\n    },\r\n    toolbar: {\r\n      flexWrap: 'wrap',\r\n    },\r\n    toolbarTitle: {\r\n      flexGrow: 1,\r\n    },\r\n    link: {\r\n      margin: theme.spacing(1, 1.5),\r\n      color:\"#fff\"\r\n    },\r\n    nav:{\r\n      display:\"flex\",\r\n      flexDirection:\"row\"\r\n    }\r\n  }));\r\n\r\n  \r\n\r\n\r\nconst Header = ({avatarurl}) => {\r\n    const classes = useStyles();\r\n    //User logged in\r\n    var user = localStorage.getItem('user');\r\n    var User=JSON.parse(user);\r\n    let history = useHistory();\r\n\r\n    //function to close session\r\n    const logOut=()=>{\r\n      localStorage.removeItem('user');\r\n      history.push('/Login')    \r\n    }\r\n    return ( \r\n        <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>          \r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\r\n            HELLO BUILD TEST\r\n          </Typography>\r\n          <nav className={classes.nav}>            \r\n             <Avatar alt=\"Remy Sharp\" src={avatarurl} />\r\n             <Typography variant=\"button\" color=\"textPrimary\" href=\"#\" className={classes.link}>\r\n             Welcome {User.username}\r\n            </Typography>                        \r\n          </nav>\r\n          <Button href=\"#\" color=\"primary\" variant=\"outlined\" className={classes.link} onClick={()=>logOut()}>\r\n          log out\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      margin:'40px 0',\r\n      width: 400,\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n  }));\r\n\r\n//filter repositories by name according to a term\r\nconst Search = ({repositoriesAll,setrepositories}) => {\r\n    const classes = useStyles();\r\n    const SearchRepository=(e)=>{\r\n        let term=e.target.value\r\n        let arraySearch=Array.from(repositoriesAll)\r\n        let SearchRepositories=arraySearch.filter((repo)=>repo.name.toUpperCase().indexOf(term.toUpperCase()) > -1)\r\n        setrepositories(SearchRepositories);\r\n    }\r\n\r\n  return (\r\n    <Paper elevation={3} component=\"form\" className={classes.root}>      \r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search a Repository\"\r\n        inputProps={{ 'aria-label': 'search google maps' }}\r\n        onChange={(e)=>SearchRepository(e)}\r\n      />\r\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>      \r\n    </Paper>\r\n  );\r\n}\r\n \r\nexport default Search;","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport Header from \"./Layouts/Header\";\r\nimport Search from \"./Layouts/Search\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport moment from \"moment\"\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Axios } from \"../config/axios\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport {\r\n  ADD_FAVORITES,\r\n  GET_FAVORITES,\r\n  REMOVE_FAVORITES,\r\n} from \"../constants/index\";\r\n\r\nconst query = gql`\r\n  query user($login: String!) {\r\n    user(login: $login) {\r\n      avatarUrl\r\n      repositories(first: 50, isFork: false) {\r\n        nodes {\r\n          name\r\n          description\r\n          createdAt\r\n          isPrivate\r\n          url\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    marginTop: 30,\r\n  },\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  Star: {\r\n    color: \"#DAD05C\",\r\n    fontSize: 35,\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nconst Inicio = () => {\r\n\r\n  //authenticated user\r\n  var user = localStorage.getItem(\"user\");\r\n  var User = JSON.parse(user);\r\n\r\n  //UseStates\r\n  const [repositories, setrepositories] = useState([]);\r\n  const [repositoriesFav, setrepositoriesFav] = useState([]);\r\n  const [avatarurl, setavatarurl] = useState(\"\");\r\n  const [active, setactive] = useState(\"#202123\");\r\n  const [Fav, setFav] = useState(false);\r\n  const [favvoid, setfavvoid] = useState(false);\r\n  const [refresh, setrefresh] = useState(false);\r\n  const [disable, setdisable] = useState(\"#fff\");\r\n  const classes = useStyles();\r\n\r\n  //we execute the query to obtain the repositories\r\n  const { data, loading, refetch } = useQuery(query, {\r\n    variables: { login: User ? User.username : \"\" },\r\n  });\r\n\r\n  console.log(data);\r\n\r\n  \r\n\r\n  //Get the list of favorite repositories\r\n  const getFavorites = () => {\r\n    let data = { userId: User._id };\r\n    Axios.post(GET_FAVORITES, data)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (repositoriesFav.length !== 0) {\r\n          setrepositories(res.data.repos);\r\n        }\r\n        if(res.data.repos.length===0){\r\n          console.log(\"entraaaa\");\r\n          setfavvoid(true)\r\n        }\r\n        setrepositoriesFav(res.data.repos);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //if data is diffetent undefined\r\n    if (data) {\r\n      setrepositories(data.user.repositories.nodes);\r\n      setavatarurl(data.user.avatarUrl);\r\n      getFavorites();\r\n    }\r\n  }, [data, refresh]);\r\n\r\n //reload all repositories from the github api\r\n  const getAll = () => {\r\n    refetch();\r\n    setactive(\"#202123\");\r\n    setdisable(\"#fff\");\r\n    setrepositories([]);\r\n    setrepositoriesFav([]);\r\n    setrefresh(!refresh);\r\n  };\r\n\r\n  //function to add a repository to favorites\r\n  const AddFavorites = (repo) => {\r\n    console.log(\"repo\", repo);\r\n    let data = {\r\n      createdAt: repo.createdAt,\r\n      description: repo.description,\r\n      isPrivate: repo.isPrivate,\r\n      name: repo.name,\r\n      url: repo.url,\r\n      userId: User._id,\r\n    };\r\n    Axios.post(ADD_FAVORITES, data)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setrepositoriesFav([]);\r\n        if (Fav) {\r\n          getFavorites();\r\n        } else {\r\n          setrefresh(!refresh);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //function to remove a repository to favorites\r\n  const RemoveFavorites = (repo) => {\r\n    let name = repo.name;\r\n\r\n    Axios.delete(REMOVE_FAVORITES, { params: { name } })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setrepositoriesFav([]);\r\n        if (Fav) {\r\n          getFavorites();\r\n        } else {\r\n          setrefresh(!refresh);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //check if a repository is in the favorites list\r\n  const isFavorite = (name) => {\r\n    const current = repositoriesFav.find((repo) => name === repo.name);\r\n    if (current) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  return (\r\n    <>\r\n      {user !== null ? (\r\n        <>\r\n          <Header avatarurl={avatarurl} />          \r\n          <Container className={classes.container}>\r\n            <Search repositoriesAll={repositories} setrepositories={setrepositories}/>\r\n            <Grid style={{ marginBottom: 20 }}>\r\n              <Button\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  if(Fav){\r\n                    setFav(false);\r\n                    setfavvoid(false);\r\n                    getAll();\r\n                  }\r\n                }}\r\n                style={{ backgroundColor: active, color: disable }}\r\n              >\r\n                All Repositories\r\n              </Button>\r\n              <Button\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  if(!Fav){\r\n                  setFav(true);\r\n                  setactive(\"#fff\");\r\n                  setdisable(\"#202123\");\r\n                  setrepositories([]);\r\n                  getFavorites();\r\n                  }\r\n                }}\r\n                style={{ backgroundColor: disable, color: active }}\r\n              >\r\n                Favorites\r\n              </Button>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n              {!loading ? (\r\n                repositories.length !== 0 ? (\r\n                  repositories.map((repo, index) => (\r\n                    <Grid item xs={3} index={index}>\r\n                      <Card  elevation={3} className={classes.root}>\r\n                        <CardContent className={classes.content}>\r\n                          <Typography\r\n                            className={classes.title}\r\n                            color=\"textSecondary\"\r\n                            gutterBottom\r\n                          ></Typography>\r\n                          <Typography variant=\"h5\" component=\"h2\">\r\n                            {repo.name}\r\n                          </Typography>\r\n                          <Typography\r\n                            className={classes.pos}\r\n                            color=\"textSecondary\"\r\n                          >\r\n                            {repo.isPrivate ? \"Private\" : \"Public\"}\r\n                          </Typography>\r\n                          <Typography\r\n                            className={classes.pos}\r\n                            color=\"textSecondary\"\r\n                          >\r\n                            CreateAt: {moment(new Date(repo.createdAt)).format(\"DD/MM/YYYY\")}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" component=\"p\" style={{with:20}}>\r\n                            {repo.description\r\n                              ? repo.description\r\n                              : \"none Description\"}\r\n                            <br />\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            component=\"p\"\r\n                            style={{ width: \"10px\" }}\r\n                          >\r\n                            <br />\r\n                            URL:{repo.url}\r\n                          </Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                          {isFavorite(repo.name) ? (\r\n                            <StarIcon\r\n                              className={classes.Star}\r\n                              onClick={() => RemoveFavorites(repo)}\r\n                            />\r\n                          ) : (\r\n                            <StarBorderIcon\r\n                              className={classes.Star}\r\n                              onClick={() => AddFavorites(repo)}\r\n                            />\r\n                          )}\r\n                        </CardActions>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))\r\n                ) : (\r\n                  <h1>\r\n                    {Fav && favvoid\r\n                      ? \"you dont have favorite repositories, add one\"\r\n                      : !Fav?\"you dont have repositories\":null}\r\n                  </h1>\r\n                )\r\n              ) : (\r\n                <CircularProgress />\r\n              )}\r\n            </Grid>\r\n          </Container>\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/Login\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inicio;\r\n","import { Switch, Route } from 'react-router-dom';\r\n\r\n//components\r\nimport Login from './components/Login/Login'\r\nimport SingUp from './components/Login/SingUp'\r\nimport Inicio from './components/Inicio'\r\n\r\nconst Main = () => {\r\n\r\n    return ( \r\n        <Switch>\r\n         {/*  <Route exact path=\"/\" component={Inicio} /> */}\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/singUp\" component={SingUp} /> \r\n          <Route exact path=\"/\" component={Inicio} />                  \r\n        </Switch>\r\n     );\r\n}\r\n \r\nexport default Main;","import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'https://api.github.com/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = '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';\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    }\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache()\r\n});\r\nexport default client;","import Main from './Main';\nimport { ApolloProvider } from '@apollo/client';\nimport client from './config/apollo'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <ApolloProvider client={client} >    \n      <Main/>\n      </ApolloProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}